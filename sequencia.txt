cria um projeto vazio
	laravel new nome_do_projeto
configura o .env (cria o banco de dados se necessario)
altera o namespace padrao
	php artisan app:name NovoNamespace
criar uma migration
	php artisan make:model NomeDoModel -m (-m cria a migration)
	criar os campos do db (cuidado aos tipos, deu erro com campo text que recebeu array na hora do seed)
rodar uma migration (cria os campos no db)
	php artisan migrate

criar os campos necessarios na migration (na function up)
criar dados fake na factory (duplicar metodo, ajustar e criar os fakers)
alterar a seed para gerar dados fake (em seeds\DatabaseSeeder)
	\NomeDoNamespace\Model::truncate(); //truncate na tabela
    factory(\NomeDoNamespace\Model::class, QTDE)->create(); //cria QTDE de registros
ou
criar um novo seeder
	php artisan make:seeder ModelSeeder
		\NomeDoNamespace\Model::truncate(); //truncate na tabela
        factory(\NomeDoNamespace\Model::class, QTDE)->create(); //cria QTDE de registros
    alterar em DatabaseSeeder
    	$this->call(NomeDoSeeder::class);

Rotas:
	em app\routes.php (criar as rotas necessarias)
	{ Route::get('/point', 'NomeDoController@index'); }
Controllers:
criar um controller
	php artisan make:controller NomeDoController (vai para app\Controllers\) {deve ter os metodos em sintonia com a rota}

coisas do tinker (php artisan tinker)
para criar um registro
	$var = new NomeDoNamespace\Model;
	$var->campo = "um valor";
	$var->save(); //salva o registro no banco
para criar um conjunto de dados no construtor:
	no model, criar protected $fillable = ['campo'] (colocar os campos aceitos no array)
	rodar: NomeDoNamespace\Model::create(['campo' => 'valor',]);
para mostrar todos os registros:
	rodar: NomeDoNamespace\Model::all();
para criar dados fake
	rodar factory('NomeDoNamespace\Model', QTDE)->make(); //nao persiste
	rodar factory('NomeDoNamespace\Model', QTDE)->create(); //persiste

coisas gerais
desativar csrf:
	em app\Kernel.php:
		tirar \CodeProject\Http\Middleware\VerifyCsrfToken::class, de protected $middlewareGroups = ['web' => [
		colocar no manual: 'csrf' => \CodeProject\Http\Middleware\VerifyCsrfToken::class, em protected $routeMiddleware = [